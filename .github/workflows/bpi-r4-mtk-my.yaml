---
# More about feed: https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/
#
# NOTE: There are two versions:
# - https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/refs/heads/master/autobuild/unified/#filogic-880-wifi7-update_to_date-release (is failing in patches mt76)
# - https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/refs/heads/master/autobuild/unified/#filogic-880-wifi7-alpha-release-2024_12_06
#
name: Build image for BPi-R4 with MTK feed - alt - my config

on:
  workflow_dispatch:
    inputs:
      DEVICE_CONFIG:
        description: "Device configuration selection: <none> or poe (default: non-poe)"
        required: true
        type: choice
        default: 'non-poe'
        options:
          - poe
          - non-poe

env:
  REMOTE_REPOSITORY: danpawlik/bpi-r4-mtk
  REMOTE_BRANCH: main
  # OpenWrt
  OPENWRT_REPOSITORY: https://github.com/openwrt/openwrt
  # OPENWRT_REF: openwrt-24.10
  OPENWRT_REF: openwrt-24.10
  # Mediatek Feed
  MEDIATEK_REPOSITORY: https://git01.mediatek.com/openwrt/feeds/mtk-openwrt-feeds
  MEDIATEK_REF: master
  # MEDIATEK_REF: 47fd8068e3bcd23bb606c711ed50149b266f09af
  # Configuration
  RELEASE_PREFIX: bpi-r4-mtk
  DEVICE_CONFIG: ${{ inputs.DEVICE_CONFIG == 'poe' && 'configs/mediatek/mt7988a/bpi-r4-poe' || 'configs/mediatek/mt7988a/bpi-r4' }}

jobs:
  check_commits:
    name: Check Commits
    runs-on: ubuntu-24.04
    outputs:
      latest_commit_sha: ${{ steps.get_sha.outputs.latest_commit_sha }}
    steps:
      - name: Checkout remote repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}

      - name: Get the latest commit SHA
        id: get_sha
        run: |
          echo "latest_commit_sha=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "latest_commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  build:
    name: Build BPI-R4 with MTK feed - alt with my config
    needs: [check_commits]
    runs-on: ubuntu-24.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync swig unzip zlib1g-dev file wget curl zstd \
            git libcurl4-openssl-dev

      - name: Checkout remote repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}

      - name: Clone OpenWrt
        run: |
          git clone ${{ env.OPENWRT_REPOSITORY }} openwrt;
          cd openwrt;
          git checkout ${{ env.OPENWRT_REF }}

      - name: Clone mediatek feed
        run: |
          git clone ${{ env.MEDIATEK_REPOSITORY }} mtk-openwrt-feeds;
          cd mtk-openwrt-feeds;
          git checkout ${{ env.MEDIATEK_REF }}

      - name: Change autobuild rules - important
        run: |
          cd openwrt;
          cp ../my_files/rules ../mtk-openwrt-feeds/autobuild/unified

#      - name: Change wireless regdb - optional
#        run: |
#          cd openwrt;
#          rm -rf package/firmware/wireless-regdb/patches;
#          rm -rf ..//mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/firmware/wireless-regdb/patches;
#          mkdir -p package/firmware/wireless-regdb/patches;
#          mkdir -p ../mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/firmware/wireless-regdb/patches;
#          cp ../my_files/500-tx_power.patch ../mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/firmware/wireless-regdb/patches
#          cp ../my_files/regdb.Makefile package/firmware/wireless-regdb/Makefile
#
#      - name: Copy woziwrt patches
#        run: |
#          cd openwrt;
#          cp ../my_files/{/mt7988a-rfb-spim-nand-nmbm.dtso,mt7981-rfb-spim-nor.dtso,mt7988d-rfb.dts,mt7988a-rfb-spidev.dtso} \
#              target/linux/mediatek/files-6.6/arch/arm64/boot/dts/mediatek/
#
#          # cp ../my_files/750-mtk-eth-add-jumbo-frame-support-mt7998.patch target/linux/mediatek/patches-6.6
#          # cp ../my_files/0001-mt76-w-package-makefile.patch ../mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/patches-base/0001-mt76-package-makefile.patch
#          # cp ../my_files/0004-mac80211-w-package-makefile.patch ../mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/patches-base/0004-mac80211-package-makefile.patch
#
#          cp ../my_files/ethtool/Makefile package/network/utils/ethtool/Makefile
#          # cp -r ../my_files/0008-wozi-mac80211-Support-EHT-1024-aggregation-size-in-T.patch ../mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/kernel/mac80211/patches/subsys/0008-wifi-mac80211-Support-EHT-1024-aggregation-size-in-T.patch
#          # cp -r ../my_files/0008-wozi-mac80211-Support-EHT-1024-aggregation-size-in-T.patch ../mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/package/kernel/mac80211/patches/subsys/0008-wifi-mac80211-Support-EHT-1024-aggregation-size-in-T.patch
#          cp ../my_files/999-2709-net-ethernet-mtk_eth_soc-add-rss-lro-reg.patch ../mtk-openwrt-feeds/autobuild/unified/global/24.10/files/target/linux/mediatek/patches-6.6/
#          cp ../my_files/999-2710-net-ethernet-mtk_eth_soc-add-rss-support.patch ../mtk-openwrt-feeds/autobuild/unified/global/24.10/files/target/linux/mediatek/patches-6.6/
#          cp ../my_files/0006-arch-arm64-dts-mt7988a-add-adma-intrrupts.patch ../mtk-openwrt-feeds/autobuild/unified/global/24.10/patches-base/
#
#          cp -r ../my_files/mediatek/*.* ../mtk-openwrt-feeds/autobuild/unified/global/24.10/files/target/linux/mediatek/files-6.6/drivers/net/ethernet/mediatek/

      - name: Make sed
        run: |
          sed -i 's/CONFIG_PACKAGE_perf=y/# CONFIG_PACKAGE_perf is not set/' \
              ./mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/defconfig \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/.config \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7986_mac80211/.config

          sed -i 's/CONFIG_PACKAGE_kmod-thermal=y/# CONFIG_PACKAGE_kmod-thermal is not set/' \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/.config \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7981_mac80211/.config \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7986_mac80211/.config

      - name: Add temporary workaround
        run: |
          cd openwrt;
          cp ../my_files/ethtool/Makefile package/network/utils/ethtool/Makefile
          rm ../mtk-openwrt-feeds/autobuild/unified/global/24.10/patches-base/0007-package-network-ethtool-downgrade-to-version-6.7.patch || true

      - name: Run Mediatek prepare
        run: |
          cd openwrt;
          bash ../mtk-openwrt-feeds/autobuild/unified/autobuild.sh filogic-mac80211-mt7988_rfb-mt7996 prepare log_file=make

      # NOTE: does the MTK wifi-scripts break 5GHz DFS scan?
      - name: Add temporary workaround for mt76
        run: |
          cd openwrt;
          cp ../workarounds/0076-Comment-temporary-problematic-code.patch package/kernel/mt76/patches/
          sed -i 's@/sbin/smp-mt76.sh@#/sbin/smp-mt76.sh@g' package/network/config/wifi-scripts/files/lib/netifd/wireless/mac80211.sh
          sed -i 's@echo "Setup SMP Affinity"@#echo "Setup SMP Affinity"@g' package/network/config/wifi-scripts/files/lib/netifd/wireless/mac80211.sh

      - name: Add patch for wifi power
        run: |
          cd openwrt;
          curl -SL https://github.com/openwrt/mt76/commit/8088940ffd047a6d282a95af829562e8038f5b2d.patch | tee package/kernel/mt76/patches/0077-Yukariin-fix-wifi-power.patch

      - name: Do not create sample wireless networks
        run: |
          cd openwrt;
          git checkout package/network/config/wifi-scripts/files/lib/wifi/mac80211.uc

      - name: Print current config file
        run: |
          cd openwrt;
          cat .config

      - name: Configure firmware image
        run: |
          cd openwrt;
          curl -SL https://raw.githubusercontent.com/danpawlik/openwrt-builder/master/${{ env.DEVICE_CONFIG }} > .config
          curl -SL https://raw.githubusercontent.com/danpawlik/openwrt-builder/master/configs/common/main-router >> .config
          curl -SL https://raw.githubusercontent.com/danpawlik/openwrt-builder/master/configs/common/snapshot-short >> .config

      - name: Enable openssl
        run: |
          cd openwrt;
          sed -i '/CONFIG_PACKAGE_wpad-mbedtls=y/d' .config
          curl -SL https://raw.githubusercontent.com/danpawlik/openwrt-builder/master/configs/common/openssl >> .config

      - name: Run defconfig
        run: |
          cd openwrt;
          make defconfig

      - name: Comment mtk internal package
        run: |
          cd openwrt;
          sed -i 's/CONFIG_PACKAGE_kmod-crypto-eip=y/# CONFIG_PACKAGE_kmod-crypto-eip is not set/g' .config

      - name: Remove packages that are marked as modules
        run: |
          cd openwrt;
          grep "=m" .config | grep -v 'CONFIG_PACKAGE_libustream-mbedtls=m' | while read -r line; do module=$(echo "$line" | cut -f1 -d'='); sed -i "s/^$line$/# $module is not set/" .config; done

      - name: Build the firmware image
        run: |
          cd openwrt;
          make -j $(nproc) defconfig download world

      - name: Compress all packages
        run: |
          cd openwrt;
          tar caf bin/targets/mediatek/filogic/packages.tar.gz bin/targets/mediatek/filogic/packages

      - name: Add config file
        run: |
          cd openwrt;
          cp .config  bin/targets/mediatek/filogic/config-full

      - name: Package output
        run: |
          cd openwrt;
          tar -cvf ../bpi_r4-images.tar bin/targets/mediatek/filogic

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpi_r4-images
          path: bpi_r4-images.tar

  release:
    name: Create release
    needs: [build, check_commits]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bpi_r4-images

      - name: Extract artifacts
        run: tar xf bpi_r4-images.tar

      - name: Get current date
        run: echo "RELEASE_DATE=$(date +%F)" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@master
        with:
          files: bin/targets/mediatek/filogic/*
          tag_name: ${{ env.RELEASE_PREFIX }}-${{ env.REMOTE_BRANCH }}-${{ env.RELEASE_DATE }}
          name: OpenWRT BPI-R4 with MTK Feed with my packages ${{ inputs.DEVICE_CONFIG == 'poe' && 'POE' || '' }} - ${{ env.RELEASE_DATE }}
          body: |
            Updated prebuilt images for BPI-R4 ${{ inputs.DEVICE_CONFIG == 'poe' && 'PoE version' || '' }}  with MTK feed and my custom packages

            OpenWrt ref: ${{ env.OPENWRT_REF }}
            Mediatek feed ref: ${{ env.MEDIATEK_REF }}
            Project ref: ${{ needs.check_commits.outputs.latest_commit_sha }}

      - name: Clean up old releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 5
          delete_tags: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
